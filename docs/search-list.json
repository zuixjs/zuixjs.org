[{"url":"/pages/documentation/cli/","title":"CLI / Templates","description":"Command Line Interface, creating a new projects, pages, templates and components.","content":"## Creating a new project ```bash # Create a new website project named &#39;my-new-webapp&#39; npx zuix new my-new-webapp ``` A new folder named *my-new-webapp* will be created containing all files required to run the web-starter project. Different starter project templates are available and can be specified using the `-t` option. See *zuix.js* [Web Starter documentation](https://zuixjs.github.io/zuix-web-starter/) for a list of available templates and a complete overview of commands and features. ### Creating a new component ```shell npx zuix generate component &quot;&lt;component_name&gt;&qu"},{"url":"/pages/documentation/api/","title":"API","description":"API classes documentation, Zuix, ComponentContext, ContextController, ZxQuery.","content":"## [Zuix](zuix/Zuix) class This is the main library class accessible through the global object `zuix`. ## [ComponentContext](zuix/ComponentContext) class The context of a component manages and holds a reference to all the resources related to the component instance itself. ## [ContextController](zuix/ContextController) class This is the class used for implementing a controller. Methods of the controller object allow accessing and managing the view, events and all other aspect of a *zuix.js* component. ## [ZxQuery](helpers/ZxQuery) class *ZxQuery* is a class that provides a few utility methods "},{"url":"/pages/documentation/view/","title":"View","description":"View, Data binding, binding adapters, accessibility, behaviors, events.","content":"A *view* is the *visual* part of a component, and it consists of an `.html` template file, and a `.css` file for styles definition, both with the same base name, which is also the name of the view: - `&lt;component_id&gt;.html` - `&lt;component_id&gt;.css` (optional) A *view* can also be implemented inline, rather than in separate files, and can be declared by adding the `z-view` attribute to its container element. The value of `z-view` attribute is meant to be a unique identifier (`[/]component_name`) and shall not match the identifier of any other view placed in a file or inline in the same "},{"url":"/pages/documentation/controller/","title":"Controller","description":"Controller implementation types, lifecycle, options, events.","content":"A controller is a JavaScript piece of code that can be associated to a view, and it manages its data, presentation and the usage/interaction logic. Through a controller, it&#39;s possible to customize all aspects of a component&#39;s lifecycle since it&#39;s early initialization up to the disposal of the component itself. This can be done by implementing component&#39;s [lifecycle callbacks](../api/zuix/ContextController/#init). ## Loading a controller A controller can be loaded programmatically using the [`zuix.loadComponent(..)`](../api/zuix/Zuix/#loadComponent) method, or it can be loaded d"},{"url":"/pages/documentation/api/helpers/Logger/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: Logger","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/helpers/TaskQueue/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: TaskQueue","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/helpers/ZxQuery/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: ZxQuery","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/helpers/ZxQueryStatic/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: ZxQueryStatic","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/localizer/Localizer/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: Localizer","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/observable/ObjectObserver/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: ObjectObserver","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/observable/ObservableListener/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: ObservableListener","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/observable/ObservableObject/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: ObservableObject","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/zuix/ActiveRefresh/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: ActiveRefresh","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/zuix/ComponentContext/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: ComponentContext","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/zuix/Componentizer/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: Componentizer","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/zuix/ContextController/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: ContextController","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/zuix/ControllerInstance/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: ControllerInstance","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/zuix/ViewObserver/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: ViewObserver","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/api/zuix/Zuix/","title":"zuix.js <i class='material-icons'>emoji_nature</i> API","description":"zUIx.js API documentation, Class: Zuix","content":"/* BEGIN: MARKDOWN JSDOC */ main .content { padding-top: 24px; } main h2 code { font-weight: 400; } main h2 { margin-top: 0; font-size: 220%; } main h3 { margin-top: 72px; font-size: 200%; color: #525252; } main h4 { margin-top: 72px; margin-bottom: 0; font-size: 180%; font-weight: 500; color: #16641c; } main h5 { color: #7c3422; text-transform: uppercase; font-size: 100%; font-weight: bold; } main h6 { font-size: 220%; } main p { margin-top: 12px !important; } main em { font-family: monospace; font-size: 95%; } main table { border: solid 1px lightgray; } main table td { border: 1px solid whit"},{"url":"/pages/documentation/context_options/","title":"Context Options","description":"Component's loading options, event handlers, styles, priority, theming.","content":"When loading a component some options might be provided, some of which are available for all components, some others are custom options that can be implemented by the component for its own purpose. In either case, these options (*context options*), can be passed adding the attribute `z-options` to the component&#39;s host element. The value of the `z-options` attribute can be the name of a variable in the global scope with the value of a JSON object implementing one or more option fields described in the [ContextOptions](../api/zuix/Zuix/#ContextOptions) API. The value can also be an inline JS"},{"url":"/pages/documentation/about/","title":"About zuix.js","description":"zuix.js is a lightweight library for creating component based websites and applications by using standard HTML, CSS and JavaScript.","content":"🐝 `zuix.js` is a lightweight library for creating modular and component based websites and applications by using standard HTML, CSS and JavaScript. By default, components, resources and dependencies are loaded only when they are actually being used, and this also applies to any single functionality of a component that involves loading of external resources or dependencies. Since it&#39;s possible to load components over existing HTML content, web pages can be designed so that a page can even work with JavaScript disabled, and where JavaScript is enabled, the same page is brought to life with "},{"url":"/pages/documentation/getting_started/","title":"Getting started","description":"Creating a new project using *zuix.js* CLI tool and bare library usage.","content":"See **zuix.js** in action using the online playground, where is possible to create and download ready to use components directly in the browser! {% unpre %} ```html sports_soccer Playground ``` {% endunpre %} ## Creating a new web project using the CLI The `zuix-cli` tool can be used to create a new web project, the only prerequisite is that [node.js](https://nodejs.org/en/download/package-manager) must be installed first. ```bash # Create a new website project named &#39;my-new-webapp&#39; npx zuix new my-new-webapp ``` A new folder named *my-new-webapp* will be created containing all files r"},{"url":"/pages/documentation/component/","title":"Component","description":"Components, custom elements, shadow DOM, standalone components, the <em>default</em> component.","content":"A *component*, here intended as a reusable part of a web page, consists of a **[View](../view)**, that is implemented as HTML template with its own CSS, and a **[Controller](../controller)** that is the Javascript code that controls the *view*, its presentation and interaction logic. Component&#39;s files are placed in the same *path* location and their base name is the same, and it represents itself the *component&#39;s name*: - `[/]&lt;component_name&gt;.html` - `[/]&lt;component_name&gt;.css` (optional) - `[/]&lt;component_name&gt;.js` The *unique component&#39;s identifier* is then its ful"},{"url":"/pages/documentation/active_refresh/","title":"Events and Active&rarr;Refresh","description":"About scoped scripts, dependencies, refresh-handlers, built-in @ handlers, custom handlers.","content":"Inside the view of a component, other than standard HTML event handlers, it is possible to add event handlers that live inside the component&#39;s scripting scope. This kind of event handlers can be added to an element as an attribute having the name of the event wrapped between parentheses: `(&lt;event_name&gt;)=&quot;&lt;inline_code_or_handler_fn&gt;&quot;` The value o such event attribute is evaluated as JavaScript expression and can contain reference to variables and functions defined in the component&#39;s scripting scope, where the following predefined members are available: | Name | Des"}]